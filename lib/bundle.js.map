{"version":3,"sources":["webpack:///webpack/bootstrap cb7f6e9fb414ca74de6a","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/board.js","webpack:///./lib/main.js","webpack:///./lib/piece.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,OAAO;AAC7C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,+BAA+B,WAAW;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;ACZD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb7f6e9fb414ca74de6a","const Board = require('./board.js');\nconst Piece = require('./piece.js');\n\nconst boardDimensions = {\n  width: 12,\n  height: 20\n};\n\nclass Game {\n  constructor() {\n    this.board = new Board(12, 20);\n    this.piece = new Piece();\n    this.createPiece();\n    this.score = 0;\n    this.pause = false;\n    this.gameover = false;\n\n    this.dropCounter = 0;\n    this.dropInterval = 1000;\n    this.lastTime = 0;\n\n    this.deltaTime = 0;\n  }\n\n  clearBoard() {\n    let multiplier = 1;\n    for (let y = this.board.length -1; y > 0; y--) {\n      for (let x = 0; x < this.board[y].length; x++) {\n        if (this.board[y][x] === 0) {\n          break;\n        }\n      }\n\n    //recycle filled row\n    const row = this.board.splice(y, 1)[0].fill(0);\n    this.board.unshift(row);\n    y++;\n\n    this.piece.score += multiplier * 10;\n    multiplier *= 2;\n    }\n  }\n\n  collision() {\n    const m = this.piece.matrix;\n    const o = this.piece.pos;\n    for (let y = 0; y < m.length; y++) {\n      for (let x = 0; x < m[y].length; x++) {\n        if (m[y][x] !== 0 &&\n         (this.board[y + o.y] &&\n          this.board[y + o.y][x + o.x]) !== 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  merge() {\n    this.piece.matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          this.board.matrix[y + this.piece.pos.y][x + this.piece.pos.x] = value;\n        }\n      });\n    });\n  }\n\n  gameover(){\n    // check top row for any non-zero values\n    const topRow = this.board[0];\n    for (let i = 0; i < topRow.length; i++) {\n      if (topRow[i] !== 0 && this.collision) {\n        this.gameover = true;\n      }\n    }\n    this.gameover = false;\n  }\n\n  resetBoard() {\n    this.board = new Board(12, 20);\n  }\n\n  resetScore() {\n    this.score = 0;\n    this.updateScore();\n  }\n\n  updateScore() {\n    document.getElementById('score').innerText = this.score;\n  }\n\n  // Piece Logic\n  // extrapolate into switch/case\n  // save piece matrices as constant mapped to type\n  pieceShape(type)\n  {\n    if (type === 'I') {\n      return [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n      ];\n    } else if (type === 'L') {\n      return [\n        [0, 2, 0],\n        [0, 2, 0],\n        [0, 2, 2],\n      ];\n    } else if (type === 'J') {\n      return [\n        [0, 3, 0],\n        [0, 3, 0],\n        [3, 3, 0],\n      ];\n    } else if (type === 'O') {\n      return [\n        [4, 4],\n        [4, 4],\n      ];\n    } else if (type === 'Z') {\n      return [\n        [5, 5, 0],\n        [0, 5, 5],\n        [0, 0, 0],\n      ];\n    } else if (type === 'S') {\n      return [\n        [0, 6, 6],\n        [6, 6, 0],\n        [0, 0, 0],\n      ];\n    } else if (type === 'T') {\n      return [\n        [0, 7, 0],\n        [7, 7, 7],\n        [0, 0, 0],\n      ];\n    }\n  }\n\n  createPiece() {\n    const pieces = 'TJLOSZI';\n    this.piece.matrix = this.pieceShape(pieces[pieces.length * Math.random() | 0]);\n    this.piece.pos.y = 0;\n    this.piece.pos.x = (this.board.matrix[0].length / 2 | 0) -              (this.piece.matrix[0].length / 2 | 0);\n\n    //game reset if collision on spawn\n    if (this.collision()) {\n      this.board.matrix.forEach(row => row.fill(0));\n      this.score = 0;\n      this.updateScore();\n    }\n  }\n\n  // Piece Movement\n  drop() {\n    this.piece.pos.y++;\n    if (this.collision()) {\n      this.piece.pos.y--;\n      this.merge();\n      this.createPiece();\n      this.clearBoard();\n      this.updateScore();\n    }\n    this.dropCounter = 0; //where should this reference dropCounter?\n  }\n\n  move(shift) {\n    this.piece.pos.x += shift;\n    if (this.collision()) {\n      this.piece.pos.x -= shift;\n    }\n  }\n\n  rotate(dir) {\n    const pos = this.piece.pos.x;\n    let offset = 1;\n    this.game.transpose(this.piece.matrix, dir);\n    while (this.collision()) {\n      this.piece.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > this.piece.matrix[0].length) {\n        this.rotate(this.piece.matrix, -dir);\n        this.piece.pos.x = pos;\n        return;\n      }\n    }\n  }\n\n  transpose(matrix, dir) {\n    for (let y = 0; y < matrix.length; ++y) {\n      for (let x = 0; x < y; ++x) {\n        [\n          matrix[x][y],\n          matrix[y][x],\n        ] = [\n          matrix[y][x],\n          matrix[x][y],\n        ];\n      }\n    }\n\n    if (dir > 0) {\n      matrix.forEach(row => row.reverse());\n    } else {\n      matrix.reverse();\n    }\n  }\n\n}\n\nmodule.exports =  Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","const Game = require('./game.js');\n\nconst COLORS = [\n  null,\n  '#F61067',\n  '#008080',\n  '#ECA400',\n  '#C14953',\n  '#241E4E',\n  '#F28123',\n  '#D34E24',\n];\n\nclass GameView {\n\n  constructor(ctx, game) {\n    this.game = game;\n    this.ctx = ctx;\n    this.paused = false;\n    this.piece = game.piece;\n    this.board = game.board; // Board constructor function\n    document.addEventListener('keydown', (event) => {\n      event.preventDefault();\n      if (event.keyCode === 37) {\n        this.game.move(-1);\n      } else if (event.keyCode === 39) {\n        this.game.move(1);\n      } else if (event.keyCode === 40) {\n        this.game.drop();\n      } else if (event.keyCode === 90) {\n        this.game.rotate(-1);\n      } else if (event.keyCode === 32) {\n        this.game.rotate(1);\n      } else if (event.keyCode === 13) {\n        this.pause();\n      } else if (event.keyCode === 81) {\n        this.game.reset();\n      }\n    });\n\n    this.update = this.update.bind(this);\n    this.draw = this.draw.bind(this);\n\n  }\n\ndrawMatrix() {\n  this.piece.matrix.forEach((row, y) => {\n    row.forEach((value, x) => {\n      if (value !== 0) {\n        this.ctx.fillStyle = COLORS[value];\n        this.ctx.fillRect(x + this.piece.pos.x, y + this.piece.pos.y, 1, 1);\n      }\n    });\n  });\n}\n\ndraw() {\n  this.ctx.fillStyle = '#ccc';\n  this.ctx.fillRect(0, 0, this.ctx.width, this.ctx.height);\n\n  this.drawMatrix(this.board, {x: 0, y: 0});\n  this.drawMatrix(this.piece.matrix, this.piece.pos);\n\n  requestAnimationFrame(this.draw.bind(this));\n}\n\nupdate() {\n  // let dropInterval = this.game.dropInterval;\n  // debugger\n  // let lastTime = this.game.lastTime;\n  // debugger\n  // debugger\n  // const deltaTime = time - this.game.lastTime;\n  // debugger\n  // let dropCounter = this.game.dropCounter;\n  // debugger\n  // dropCounter += deltaTime;\n  // if (dropCounter > this.game.dropInterval) {\n  //   this.game.drop();\n  // }\n  // debugger\n  // this.game.lastTime = time;\n  // this.draw();\n  this.game.drop;\n  this.draw();\n}\n\nstart() {\n  this.intervalId = setInterval(this.update.bind(this), 1000);\n}\n\npause() {\n  clearInterval(this.intervalId);\n}\n\n\n\n// Stays here\n// Also part of the looping mechanism\n// play() {\n//   this.update(time = 0, dropInterval = 1000, lastTime = 0, dropCounter = 0);\n//   this.draw();\n//   requestAnimationFrame(this.update)\n// }\n\n// Game\n\n}\n\n// const animate = new GameView(ctx, game);\n// animate.draw();\n//\n// class Animate {\n//   constructor(ctx, game) {\n//\n//   }\n//\n//\n// }\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 1\n// module chunks = 0","class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this.matrix = this.createBoard(this.width, this.height);\n  }\n\n  createBoard(width, height) {\n    const matrix = [];\n    while (height > 0) {\n      matrix.push(new Array(width).fill(0));\n      height--;\n    }\n\n    return matrix;\n  }\n\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvasEl = document.getElementById(\"tetris\");\n  const ctx = canvasEl.getContext(\"2d\");\n  ctx.scale(20,20);\n  const game = new Game();\n  const gameView = new GameView(ctx, game);\n\n  gameView.start();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 3\n// module chunks = 0","const Game = require('./game.js');\n\nconst COLORS = [\n    null,\n    '#F61067',\n    '#008080',\n    '#ECA400',\n    '#C14953',\n    '#241E4E',\n    '#F28123',\n    '#D34E24',\n];\n\nclass Piece {\n  constructor() {\n    this.pos = {x: 0, y: 0};\n    this.matrix = null;\n  }\n\n  pieceShape(type)\n  {\n    if (type === 'I') {\n      return [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n      ];\n    } else if (type === 'L') {\n      return [\n        [0, 2, 0],\n        [0, 2, 0],\n        [0, 2, 2],\n      ];\n    } else if (type === 'J') {\n      return [\n        [0, 3, 0],\n        [0, 3, 0],\n        [3, 3, 0],\n      ];\n    } else if (type === 'O') {\n      return [\n        [4, 4],\n        [4, 4],\n      ];\n    } else if (type === 'Z') {\n      return [\n        [5, 5, 0],\n        [0, 5, 5],\n        [0, 0, 0],\n      ];\n    } else if (type === 'S') {\n      return [\n        [0, 6, 6],\n        [6, 6, 0],\n        [0, 0, 0],\n      ];\n    } else if (type === 'T') {\n      return [\n        [0, 7, 0],\n        [7, 7, 7],\n        [0, 0, 0],\n      ];\n    }\n  }\n\n  createPiece() {\n    const pieces = 'TJLOSZI';\n    this.matrix = this.pieceShape(pieces[pieces.length * Math.random() | 0]);\n    this.pos.y = 0;\n\n    this.pos.x = (this.game.board.matrix[0].length / 2 | 0) -              (this.matrix[0].length / 2 | 0);\n\n    //game reset if collision on spawn\n    if (this.game.collision()) {\n      this.game.board.forEach(row => row.fill(0));\n      this.game.score = 0;\n      this.game.updateScore();\n    }\n  }\n\n}\n\n\nmodule.exports =  Piece;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/piece.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}